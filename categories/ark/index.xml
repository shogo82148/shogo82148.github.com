<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ark on Shogo&#39;s Blog</title>
    <link>https://shogo82148.github.io/categories/ark/</link>
    <description>Recent content in ark on Shogo&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 07 Dec 2013 20:11:00 +0900</lastBuildDate>
    <atom:link href="https://shogo82148.github.io/categories/ark/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ark-View-DataTable グラフや表やCSVを簡単に表示したい</title>
      <link>https://shogo82148.github.io/blog/2013/12/07/ark-view-datatable/</link>
      <pubDate>Sat, 07 Dec 2013 20:11:00 +0900</pubDate>
      <guid>https://shogo82148.github.io/blog/2013/12/07/ark-view-datatable/</guid>
      <description>こんにちは、最近ログの解析をして遊んでいるいっちーです。 解析の結果は最終的にグラフに出すわけなのですが、 先輩方がよく使っているのもあって Google Charts を使ってます。
で、このグラフを他の人に見せると「その元データCSVでちょうだい！」と言われるんです&amp;hellip;。
もちろんcsvを作るなんてこと簡単にできるんですが、 今のプログラムにはグラフ用のテンプレートとHTMLで表出力するためのテンプレートとCSV用のテンプレートがあって、 グラフが追加されるたびにコピペして微妙に書き直し、 という不毛な作業が発生してしまうのです。つらい。
Ark::View::DataTable 使い回しの効かないテンプレートとかなんのためのテンプレートなのか。 データだけ用意してあとはそれぞれのテンプレートに入れるだけとなるのが理想的だよねー、と思い続けて早数ヶ月。 ようやく重い腰を上げて Ark::View::DataTableってのを書きました。
使い方 Data::Google::Visualization::DataTable をレンダリングするための ArkのViewです。
use Ark::View::DataTable; use Data::Google::Visualization::DataTable; sub gvis :Local { my ($self, $c) = @_; my $datatable = Data::Google::Visualization::DataTable-&amp;gt;new(); $datatable-&amp;gt;add_columns( { id =&amp;gt; &amp;#39;x&amp;#39;, label =&amp;gt; &amp;#34;X&amp;#34;, type =&amp;gt; &amp;#39;number&amp;#39; }, { id =&amp;gt; &amp;#39;y&amp;#39;, label =&amp;gt; &amp;#34;Y&amp;#34;, type =&amp;gt; &amp;#39;number&amp;#39; }, ); # 〜〜〜〜正弦波を描きましょう〜〜〜〜 $datatable-&amp;gt;add_rows( map { [$_, sin(2*3.1415926535*$_/500)] } 1..1000, ); $c-&amp;gt;stash-&amp;gt;{table} = $datatable; $c-&amp;gt;forward( $c-&amp;gt;view( &amp;#39;DataTable&amp;#39; ) ); } Controllerに感じでかくと使えます。 「/gvis?</description>
    </item>
  </channel>
</rss>
