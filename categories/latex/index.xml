<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Latex on Shogo&#39;s Blog</title>
    <link>https://shogo82148.github.io/categories/latex/</link>
    <description>Recent content in Latex on Shogo&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 02 Mar 2013 16:20:00 +0900</lastBuildDate>
    
	<atom:link href="https://shogo82148.github.io/categories/latex/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LaTeX2EPUBで電子書籍を作ってみる</title>
      <link>https://shogo82148.github.io/blog/2013/03/02/2013-03-02-latex2epub/</link>
      <pubDate>Sat, 02 Mar 2013 16:20:00 +0900</pubDate>
      
      <guid>https://shogo82148.github.io/blog/2013/03/02/2013-03-02-latex2epub/</guid>
      <description>LaTeXで書いた文章を電子書籍にしたくなったので， LaTeX2EPUBを使ってみました．
LaTeX2EPUBはLaTeXMLとReVIEWに依存しているようなので， それぞれインストールしていきます． あと，数式の変換とかにLaTeXを使っているので別途用意する必要あり． いろんなディストリビューションがあるけど， ここでは TeX Live 2012 を使いました．
LaTeXML のインストール LaTeXMLはLaTeXの文章をXML形式に変換するソフト． そこからさらにXSLTを使ってXHTMLへ変換できる． ドキュメントに従って 依存するライブラリをインストール．
perl -MCPAN -e shell cpan&amp;gt; install DB_File, Parse::RecDescent, File::Which cpan&amp;gt; install XML::LibXML, XML::LibXSLT ドキュメントが少し古いらしく，これだけでは不十分だった． 追加でParse::RecDescentとImage::Magickもインストールしておく．
cpan&amp;gt; install Parse::RecDescent cpan&amp;gt; quit yum install ImageMagick-perl 後はソースを取ってきてmakeするだけ． 現時点での最新版0.7.0をインストールした．
wget http://dlmf.nist.gov/LaTeXML/releases/LaTeXML-0.7.0.tar.gz tar zxvf LaTeXML-0.7.0.tar.gz cd LaTeXML-0.7.0 perl Makefile.PL make make test make install  ReVIEW のインストール ReVIEWは簡単なマークアップ言語で書かれたテキストから PDFやEPUBを作成するためのスクリプトです． このなかのEPUB作成機能に依存しているようなのでインストールしておきます． ReVIEWはgemで簡単インストール．
gem install review LaTeX2EPUB のインストール LaTeX2EPUB本体をインストール． 本家の日本語化対応が少し不十分だったので 改造版を上げといた． これをダウンロードしてパスの通ったところに置けばインストール完了．</description>
    </item>
    
    <item>
      <title>TinySegmenterをLaTeXに移植してみた</title>
      <link>https://shogo82148.github.io/blog/2012/12/16/2012-12-16-tinysegmenter-for-tex/</link>
      <pubDate>Sun, 16 Dec 2012 13:11:00 +0900</pubDate>
      
      <guid>https://shogo82148.github.io/blog/2012/12/16/2012-12-16-tinysegmenter-for-tex/</guid>
      <description>この記事はTeX &amp;amp; LaTeX Advent Calendarの傘下記事です． 15日はk16.shikanoさんの「TeX がむかついたので実装したけど挫折してる話」, 17日は@egtraさんの「LCDF TypetoolsでOpenTypeフォントを使う(DVIPDFMXで)」です．
neruko3114が参加しているのを見てなんだか楽しそうだったで参加してみました． とはいってもネタも思いつかなったので，過去に作ったものをTeXに移植してみました． ターゲットはTinySegmenter． 以前作ったTinySegmenterMakerでLaTeXを出力できるようになったよ！
使ってみる TinySegmenterMakerのレポジトリをダウンロードするなりgit cloneするなりして 落としてきます． レポジトリに入っているのはモデルファイルとスクリプトだけです． これらを使ってTeXのスタイルファイルを作ります．
$ cd /path/to/TinySegmenterMaker/ $ ./maker tex &amp;lt; RWCP.model カレントディレクトリにtinysegmenter.styができます． TeX から見えるところにおいておきましょう． これを使うソースコードは次のようになります．
\documentclass{jarticle} \usepackage{tinysegmenter} \begin{document} \TinySegmenter{-}{私の名前は中野です} \end{document} platexで処理するとこんな感じに表示されるはず．
私-の-名前-は-中野-です 仕組み TinySegmeneterは元の文章の一部を切り取ってハッシュに入れる動作をしている． でも，LaTeXにはハッシュみたいなデータ構造がないのでコントロールシーケンスで代用． \@ifundefinedで有無を確認し，\csname\endcsnameで置き換え． コントロールシーケンスの一部に日本語を使わないといけないので，日本語LaTeX環境でしか動かない． ただ，一部句点などの扱いが違う？よくわからない．
あとは，文字種の取得が必要なんだけど，ここでも同じことをしてます． すべてのアルファベット・ひらがな・カタカナ・数字について，その文字種をベタ書き． それ以外は全部漢字扱い． そのため，それ以外の文字を使うとオリジナルとは違う結果になるかも．
最後は足し算．これはカウンタを使えば簡単ですね．
応用編 TinySegmenterMakerでは自由にモデルを差し替えることができます． 以前JavaScript版のTinySegmenterを使って， 聞こえますか…自動生成…してみた…よ… ということをしてみました． LaTeXだってできるはず．
聞こえますか… に心に呼びかけるためのモデルファイルが含まれています． これをダウンロードして読み込ませます．
$ ./maker tex &amp;lt; model これを自分のドキュメントに読み込ませてみます．
\documentclass{jarticle} \usepackage{tinysegmenter} \begin{document} (…\TinySegmenter{…}{聞こえますか聞こえますかあなたの心に直接語りかけています}…) \end{document} 私の声が聞こえましたか・・・？</description>
    </item>
    
  </channel>
</rss>