<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>slack on Shogo&#39;s Blog</title>
    <link>https://shogo82148.github.io/categories/slack/</link>
    <description>Recent content in slack on Shogo&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 01 Oct 2023 00:05:00 +0900</lastBuildDate><atom:link href="https://shogo82148.github.io/categories/slack/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Slack Incoming Webhook を GitHub Actions Secrets へ突っ込むのに疲れた俺達は</title>
      <link>https://shogo82148.github.io/blog/2023/10/01/2023-10-01-github-actions-notify-slack/</link>
      <pubDate>Sun, 01 Oct 2023 00:05:00 +0900</pubDate>
      
      <guid>https://shogo82148.github.io/blog/2023/10/01/2023-10-01-github-actions-notify-slack/</guid>
      <description>GitHub ActionsからSlackへ通知したいとき、一番お手軽なのはSlack Incoming Webhookです。 直接curlで叩いてもいいですし、マーケットプレイスにも通知用のアクションがたくさんあります。
しかし、Incoming Webhookは一般公開してはいけないシークレットです。 迂闊にレポジトリにコミットしてはいけません。 GitHub Actions Secrets へ突っ込む等して、適切に管理する必要があります。 一個や二個ならまだしも、いくつもレポジトリがあると管理が大変です。
そういうわけで、OIDCを使ってSlackへの通知を行うアクションを書きました。
 actions-notify-slack  使い方  gha-notify.shogo82148.com へアクセスします。 「Add to Slack」をクリックして、アプリをSlackにインストールします。 @actions-notify-slack というボットが追加されるので、こいつを通知を流したいチャンネルに招待します。 投稿先のチャンネルで /gha-notify allow ORG/REPO スラッシュコマンドを実行します。これにより ORG/REPO からの投稿が許可されます。 ワークフローにアクションを追加して完成！　  - uses:shogo82148/actions-notify-slack@v0with:team-id:T3G1HAY66# 自分のチームIDに置き換えchannel-id:C3GMGG162# 自分のチャンネルIDに置き換えpayload:&amp;#39;{&amp;#34;text&amp;#34;: &amp;#34;hello world&amp;#34;}&amp;#39;仕組み 早い話が、過去 GitHub や AWS 向けに作ったアクションを Slack 向けに焼き直したものです。
 actions-github-app-tokenの紹介 AWS_SECRET_ACCESS_KEY を GitHub Actions secrets へ突っ込むのに疲れた俺達は  GitHub Actions は直接 Slack とやり取りするかわりに、中継サーバーにリクエストを投げます。 中継サーバーは、OIDC ID Tokenを検証し、Slackへの投稿権限をチェックします。 権限を確認できたら、ボットユーザーとして投稿する、という流れです。
セキュリティーへの考慮 短命トークンの使用 Slack Incoming Webhook の有効期限は無期限です。 明示的に無効化しない限りいつまででも使えます。 万が一流出してしまった場合、期限がないので影響が大きいです。</description>
    </item>
    
  </channel>
</rss>
