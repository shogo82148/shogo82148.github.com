---
layout: post
title: "YAPCへ行ってきた(一日目)"
date: 2013-09-20T21:48:00+09:00
comments: true
categories: [Perl, yapcasia]
---

YAPCの一日目に行ってきたよ。

<!-- More -->

## いまどきのカジュアルなデータベース関連開発

Songmu先生のセッション。

DBIx::Schema::DSL とか GitDDL::Migrator とかの説明や、
DBのスキーマ設計、Redisの紹介なんかがありました。
自分もMySQLやRedisを触る機会が増えて、DB周りでつらい思いをしたことが何度かあるので
(外部キー制約でデッドロック起こしたり、無駄なインデックスを必死に削除したり・・・)
大いに参考に参考にさせていただきます。

スライドはこちらから→[いまどきのカジュアルなデータベース関連開発](http://songmu.github.io/slides/yapc-asia2013/)

## 学術分野におけるPerlの活用例

Perlを使ったアンケートの結果と、PerCUDAの紹介。
GPGPUをPerlのコードで実現しようとのお話。


## 大規模Perl初心者研修を支える技術

:DeNAさんが行った研修の紹介です。
顔覚えられない、
研修生の状況把握が大変、
信頼関係を作るのが大変
といった問題をどうやって解決したかについてのお話がありました。

トークの中で紹介された本何冊か持っているけど、全然読んでない・・・。
というか研修生みんなこれ読んだんですか。

スライドはこちらから→[大規模Perl初心者研修を支える技術](http://www.slideshare.net/DaisukeTamada/perl-26371335)


## mod_perlの展望とApacheの超絶技巧

最近僕の周辺ではあまり Apache の話題を聞かなくなってしまいましたね。
しかし、その知名度の高さからか、他のオープンソースのプロダクトはダメでも、
Apache はOKという案件があるらしい。
「Apache使いました！」っていうために、mod_perl で代替品を作ろう、というお話。
おそろしい・・・。

スライドはこちらから→[mod_perlの展望とApacheの超絶技巧](http://www.slideshare.net/xtetsuji/apachemodperl-yapcasia)


## 0から学んだポストモダンPerl

ルーティングとかORMはWAFにはいらない。
blessで十分！これぞ、ポスト・モダンPerl！とのことでした。

僕もフルスタックのフレームワークより、
各機能が別になっているほうが好きですね。
(でもblessよりはクラスを扱うためのライブラリ使ったほうがよいと思う)
まあ、あんまり大規模なWebアプリ作ったこと無いので、
実際に作ってみると意見が変わるかもしれませんが。

スライドはこちらから→[0から学んだポストモダンPerl](http://www.slideshare.net/TasukuSuenaga/yapc2013)


## Dist::Zilla

英語のトークに紛れ込んでしまい、正直良くわからなかった。
英語能力全く向上していない。

モジュールを作成、テスト、アップロード等の管理をするためのプログラムらしい。
Redis::Namespace でつらい思いをしたので、
次モジュールを作りたくなったら試してみよう。


## perl な web application のためのテスト情報

スライドの順番が正しいか、今使っているのは本当にマイクなのかのテストが必要ですね！
335さん自らテストの必要性を教えてくれました。
「なぜテストが必要か」言葉では語らず行動で示す335さんかっこいい。

Test::Deep は Redis::Namespace のテストでも一部使っていますが、これ便利ですね。
Test::More の is_deeply はちょっと不便だと思っていたので、今後も使っていこうと思います。


