<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: yapcasia | Shogo's Blog]]></title>
  <link href="http://shogo82148.github.io/blog/categories/yapcasia/atom.xml" rel="self"/>
  <link href="http://shogo82148.github.io/"/>
  <updated>2013-09-20T23:22:50+09:00</updated>
  <id>http://shogo82148.github.io/</id>
  <author>
    <name><![CDATA[Shogo Ichinose]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[YAPCへ行ってきた(一日目)]]></title>
    <link href="http://shogo82148.github.io/blog/2013/09/20/yapc-first-day/"/>
    <updated>2013-09-20T21:48:00+09:00</updated>
    <id>http://shogo82148.github.io/blog/2013/09/20/yapc-first-day</id>
    <content type="html"><![CDATA[<p>YAPCの一日目に行ってきたよ。</p>

<!-- More -->


<h2>いまどきのカジュアルなデータベース関連開発</h2>

<p>Songmu先生のセッション。</p>

<p>DBIx::Schema::DSL とか GitDDL::Migrator とかの説明や、
DBのスキーマ設計、Redisの紹介なんかがありました。
自分もMySQLやRedisを触る機会が増えて、DB周りでつらい思いをしたことが何度かあるので
(外部キー制約でデッドロック起こしたり、無駄なインデックスを必死に削除したり・・・)
大いに参考に参考にさせていただきます。</p>

<p>スライドはこちらから→<a href="http://songmu.github.io/slides/yapc-asia2013/">いまどきのカジュアルなデータベース関連開発</a></p>

<h2>学術分野におけるPerlの活用例</h2>

<p>Perlを使ったアンケートの結果と、PerCUDAの紹介。
GPGPUをPerlのコードで実現しようとのお話。</p>

<h2>大規模Perl初心者研修を支える技術</h2>

<p>:DeNAさんが行った研修の紹介です。
顔覚えられない、
研修生の状況把握が大変、
信頼関係を作るのが大変
といった問題をどうやって解決したかについてのお話がありました。</p>

<p>トークの中で紹介された本何冊か持っているけど、全然読んでない・・・。
というか研修生みんなこれ読んだんですか。</p>

<p>スライドはこちらから→<a href="http://www.slideshare.net/DaisukeTamada/perl-26371335">大規模Perl初心者研修を支える技術</a></p>

<h2>mod_perlの展望とApacheの超絶技巧</h2>

<p>最近僕の周辺ではあまり Apache の話題を聞かなくなってしまいましたね。
しかし、その知名度の高さからか、他のオープンソースのプロダクトはダメでも、
Apache はOKという案件があるらしい。
「Apache使いました！」っていうために、mod_perl で代替品を作ろう、というお話。
おそろしい・・・。</p>

<p>スライドはこちらから→<a href="http://www.slideshare.net/xtetsuji/apachemodperl-yapcasia">mod_perlの展望とApacheの超絶技巧</a></p>

<h2>0から学んだポストモダンPerl</h2>

<p>ルーティングとかORMはWAFにはいらない。
blessで十分！これぞ、ポスト・モダンPerl！とのことでした。</p>

<p>僕もフルスタックのフレームワークより、
各機能が別になっているほうが好きですね。
(でもblessよりはクラスを扱うためのライブラリ使ったほうがよいと思う)
まあ、あんまり大規模なWebアプリ作ったこと無いので、
実際に作ってみると意見が変わるかもしれませんが。</p>

<p>スライドはこちらから→<a href="http://www.slideshare.net/TasukuSuenaga/yapc2013">0から学んだポストモダンPerl</a></p>

<h2>Dist::Zilla</h2>

<p>英語のトークに紛れ込んでしまい、正直良くわからなかった。
英語能力全く向上していない。</p>

<p>モジュールを作成、テスト、アップロード等の管理をするためのプログラムらしい。
Redis::Namespace でつらい思いをしたので、
次モジュールを作りたくなったら試してみよう。</p>

<h2>perl な web application のためのテスト情報</h2>

<p>スライドの順番が正しいか、今使っているのは本当にマイクなのかのテストが必要ですね！
335さん自らテストの必要性を教えてくれました。
「なぜテストが必要か」言葉では語らず行動で示す335さんかっこいい。</p>

<p>Test::Deep は Redis::Namespace のテストでも一部使っていますが、これ便利ですね。
Test::More の is_deeply はちょっと不便だと思っていたので、今後も使っていこうと思います。</p>
]]></content>
  </entry>
  
</feed>
