<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mecab | Shogo's Blog]]></title>
  <link href="http://shogo82148.github.io/blog/categories/mecab/atom.xml" rel="self"/>
  <link href="http://shogo82148.github.io/"/>
  <updated>2015-12-09T00:01:12+09:00</updated>
  <id>http://shogo82148.github.io/</id>
  <author>
    <name><![CDATA[Shogo Ichinose]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MeCabをPython3から使う(中間報告)]]></title>
    <link href="http://shogo82148.github.io/blog/2015/06/02/mecab-in-python3/"/>
    <updated>2015-06-02T23:12:00+09:00</updated>
    <id>http://shogo82148.github.io/blog/2015/06/02/mecab-in-python3</id>
    <content type="html"><![CDATA[<p>先日このようなツイートを見かけて、
「Python3になってGCの挙動変わったのかな？」と疑問に思ったので調査してみました。</p>

<p><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">MeCabをPythonから使う注意点とか - Shogo&#39;s Blog <a href="http://t.co/vJnOqZfUd7">http://t.co/vJnOqZfUd7</a> <a href="https://twitter.com/shogo82148">@shogo82148</a>さんから python3だと変数に代入しなくても動くのだけど2.xでは留意しないといけない</p>&mdash; NOKUBI Takatsugu野首貴嗣 (@knok) <a href="https://twitter.com/knok/status/605197292086263808">June 1, 2015</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p>

<!-- More -->


<h2>Python3へのMeCabインストール</h2>

<p>手元のPython3.4.3にMeCab Bindingをインストールします。
MeCabの公式(Google Codeサービス停止にともない<a href="https://taku910.github.io/mecab/">github pageへ移行している模様</a>)から落とせる
Python BindingはPython2.x向けのため、setup.pyがそのままでは動きません。
Python3.xでは非互換な文法の変更が入ったので以下のように書き換える必要があります。</p>

<p>``` diff
diff --git a/setup.py.org b/setup.py
index 4486cbb..657945a 100644
--- a/setup.py.org
+++ b/setup.py
@@ -7,7 +7,7 @@ def cmd1(str):</p>

<pre><code> return os.popen(str).readlines()[0][:-1]
</code></pre>

<p> def cmd2(str):
-    return string.split (cmd1(str))
+    return cmd1(str).split()</p>

<p> setup(name = "mecab-python",</p>

<pre><code>    version = cmd1("mecab-config --version"),
</code></pre>

<p>```</p>

<p>あとは <code>python setup.py install</code> で入ります。</p>

<h2>動かしてみる</h2>

<p>以前書いた「<a href="http://shogo82148.github.io/blog/2012/12/15/mecab-python/">MeCabをPythonから使う注意点とか</a>」を見返しながら、
GCされて上手く動かない例 をPython3.4.3で動かしてみます。
文字列の扱いが変わったり、print文の扱いが変わったりしているので、その部分だけ書き換えが必要です。</p>

<p>``` python
import MeCab
tagger = MeCab.tagger('')
text = u'MeCabで遊んでみよう！'</p>

<p>node = tagger.parseToNode(text)</p>

<h1>Python2.x ではencode必須だったのが要らなくなった！</h1>

<h1>node = tagger.parseToNode(text.encode('utf-8'))</h1>

<p>while node:</p>

<pre><code>print(node.surface + '\t' + node.feature)
# printは文ではなくなったのでカッコで囲う必要がある
node = node.next
</code></pre>

<p>```</p>

<p>さて、動かしてみましょう。</p>

<p>``` plain</p>

<pre><code>BOS/EOS,*,*,*,*,*,*,*,*
名詞,一般,*,*,*,*,*
助詞,格助詞,一般,*,*,*,で,デ,デ
動詞,自立,*,*,五段・バ行,連用タ接続,遊ぶ,アソン,アソン
助詞,接続助詞,*,*,*,*,で,デ,デ
</code></pre>

<p>Traceback (most recent call last):
  File "m.py", line 10, in <module></p>

<pre><code>print( node.surface + '\t' + node.feature )
</code></pre>

<p>UnicodeDecodeError: 'utf-8' codec can't decode byte 0xa3 in position 1: invalid start byt
```</p>

<p>surfaceが全く読み取れていない・・・。
最後にはutf-8のデコードができず死んでしまっています。
全然変わってないじゃないか！</p>

<p>変わってないどころか、状況はさらに悪くなっています。
解決方法は以前の記事の通り「エンコード済みtext」を変数に保存・・・なのですが、
Python3.x(+SWIG)ではエンコードが自動的に行われてしまうので <strong>ユーザが「エンコード済みtext」にアクセスすることができません！ </strong></p>

<p><a href="http://samurait.hatenablog.com/entry/Mecab-python3">python3対応 Mecabの紹介</a>や
<a href="https://github.com/taku910/mecab/pull/16">SWIG 3.0.5で作りなおしたPR</a>等を試してみましたが、
同様の症状でした。</p>

<h2>まとめ</h2>

<ul>
<li>Python3.xでもPython2.xと同様で、元テキストがGCで回収されてしまう</li>
<li>Python3.xになって回避策が無くなった</li>
</ul>


<p>ぱっと思いつく回避策は以下のような感じでしょうか・・・。</p>

<ul>
<li>諦めて <code>parseToNode</code> を使わず、<code>parse</code>の結果を頑張って解析する</li>
<li>SWIGの設定やC++側の書き方で頑張る(具体策は未調査)</li>
</ul>


<p>インターフェースを変えずに後者の方法で何とかならないか、
引き続きいじってみようと思います。</p>

<h2>参考</h2>

<ul>
<li><a href="https://github.com/taku910/mecab">taku910/MeCab</a></li>
<li><a href="https://taku910.github.io/mecab/">MeCab</a></li>
<li><a href="http://shogo82148.github.io/blog/2012/12/15/mecab-python/">MeCabをPythonから使う注意点とか</a></li>
<li><a href="http://www.trifields.jp/how-to-use-mecab-in-ubuntu-14-04-and-python-3-1196">Ubuntu14.04とPython3でMeCabを使う方法</a></li>
<li><a href="http://samurait.hatenablog.com/entry/Mecab-python3">python3対応 Mecabの紹介</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
