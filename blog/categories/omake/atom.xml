<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: OMake | Shogo's Blog]]></title>
  <link href="http://shogo82148.github.io/blog/categories/omake/atom.xml" rel="self"/>
  <link href="http://shogo82148.github.io/"/>
  <updated>2014-04-27T22:05:14+09:00</updated>
  <id>http://shogo82148.github.io/</id>
  <author>
    <name><![CDATA[Shogo Ichinose]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OMakeの使い方復習]]></title>
    <link href="http://shogo82148.github.io/blog/2012/08/09/omake/"/>
    <updated>2012-08-09T11:13:00+09:00</updated>
    <id>http://shogo82148.github.io/blog/2012/08/09/omake</id>
    <content type="html"><![CDATA[<p>久しぶりに<a href="http://omake.metaprl.org/index.html">OMake</a>を使おうと思ったら、使い方を忘れてしまったので復習。</p>

<!-- more -->


<h2>基本的な流れ</h2>

<h3>初期化</h3>

<p>OMakeのインストールはaptitudeやyumや<a href="http://omake.metaprl.org/download.html">Download OMake</a>あたりで頑張る。
OMakeがインストールできたら、まずは初期化のおまじない。</p>

<p><code>bash
omake --install
</code></p>

<p>カレントディレクトリにOmakefileとOmakerootが作られる。
自分のプロジェクト内容に合わせてOmakefileを編集。
具体的な例は後述。</p>

<h3>ビルドする</h3>

<p>単に「omake」と打つとビルド</p>

<p><code>bash
omake
</code></p>

<h3>継続監視ビルド</h3>

<p>「-P」オプションで継続監視ビルド</p>

<p><code>bash
omake -P
</code></p>

<p>関連するファイルを監視して、変更があれば自動的にビルドしてくれる。</p>

<h3>キャッシュの削除</h3>

<p>OMakeでビルドすると環境依存なパスの設定とかを書き込んだファイルが作成される。
Dropboxなどの同期ソフトはこれらの設定ファイルも同期してしまうので、
別環境で作業しようとするとエラーを吐いて止まってしまう。</p>

<p>次のコマンドでキャッシュファイルを無視すれば大丈夫。</p>

<p><code>bash
omake --flush-includes
</code></p>

<h2>Omakefileの例</h2>

<p>TeXの文章をビルドするOMakefileの例。
LinuxとWindowsでデフォルトの文字コードが違って面倒なので、文字コードはutf-8に統一。
PDF出力はA3サイズ。</p>

<p><div><script src='https://gist.github.com/3300749.js?file=OMakefile'></script>
<noscript><pre><code>LATEX = platex
TETEX2_ENABLED = false
LATEXFLAGS = -kanji=utf-8
DVIPDFMFLAGS = -p a4
BIBTEX = pbibtex
BIBTEXFLAGS = -kanji=utf-8

# 参考文献(.bib)とか分割したTeXファイルとか
TEXDEPS[] =
	articles.bib

LaTeXDocument(document, document)

.DEFAULT: document.pdf

</code></pre></noscript></div>
</p>

<p><a href="http://amath.colorado.edu/documentation/LaTeX/prosper/">prosper</a>を使ってプレゼン資料を作った時のOMakefile。
dvipdfmでは処理できない場合があるので、一度PostScriptにしてからPDFに変換するようにルールを上書き。
数式を多用するようなプレゼン資料だと便利。</p>

<p><div><script src='https://gist.github.com/3300749.js?file=OMakefile-slide'></script>
<noscript><pre><code>LATEX = platex
TETEX2_ENABLED = false
LATEXFLAGS = -kanji=utf8
DVIPS = dvipsk
DVIPSFLAGS = -t a4 -Ppdf -z
PS2PDF = ps2pdf.bat

TARGET = slide

$(TARGET).ps: $(TARGET).dvi
    $(DVIPS) $(DVIPSFLAGS) -f $&lt; &gt; $@

$(TARGET).pdf: $(TARGET).ps
    $(PS2PDF) $&lt; $@

LaTeXDocument($(TARGET), $(TARGET))

.DEFAULT: $(TARGET).pdf
</code></pre></noscript></div>
</p>

<h2>参考</h2>

<ul>
<li><a href="http://d.hatena.ne.jp/hayamiz/20081203/1228296644">OMake つかったらC言語でプログラム書く手間がバカみたいに減った</a></li>
<li><a href="http://d.hatena.ne.jp/hayamiz/20081208/1228727272">OMake つかって LaTeX コンパイルしたら簡単すぎて身長が5cm伸びた</a></li>
<li><a href="http://omake-japanese.sourceforge.jp/">OMake マニュアル日本語訳</a></li>
<li><a href="http://d.hatena.ne.jp/miedas/20110125/1295934980">omakeが動かない .... 動いた</a></li>
<li><a href="http://liosk.blog103.fc2.com/blog-entry-171.html">[卒論] LaTeXのビルドにOMakeを使ってみた</a></li>
</ul>


<h2>おまけ</h2>

<p>Dropboxと連携するとこんなことも。</p>

<blockquote class="twitter-tweet" lang="ja"><p>Dropboxで同期しているフォルダで、「omake -P」を実行して自動コンパイルする設定のまま放置してきちゃった。別のPCでソース書き換えると、Dropboxが同期→リモートのomakeが自動コンパイル→Dropbox経由でコンパイル結果が帰ってきた。</p>&mdash; Ichinose Shogoさん (@shogo82148) <a href="https://twitter.com/shogo82148/status/118567633581912064" data-datetime="2011-09-27T06:08:21+00:00">9月 27, 2011</a></blockquote>


<script src="http://shogo82148.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>



]]></content>
  </entry>
  
</feed>
