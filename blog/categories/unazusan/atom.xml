<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: unazusan | Shogo's Blog]]></title>
  <link href="https://shogo82148.github.io/blog/categories/unazusan/atom.xml" rel="self"/>
  <link href="https://shogo82148.github.io/"/>
  <updated>2017-12-06T05:45:00+09:00</updated>
  <id>https://shogo82148.github.io/</id>
  <author>
    <name><![CDATA[Shogo Ichinose]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[IRCに癒やしボットを入れてみた]]></title>
    <link href="https://shogo82148.github.io/blog/2014/06/04/irc-healing-bot/"/>
    <updated>2014-06-04T07:37:00+09:00</updated>
    <id>https://shogo82148.github.io/blog/2014/06/04/irc-healing-bot</id>
    <content type="html"><![CDATA[<p>別チームがIRCに癒やしボットを入れてたので、自分のチームのチャンネルにも入れてみた。</p>

<!-- More -->


<h2>Instagramに登録する</h2>

<p><a href="http://instagram.com/developer/">InstagramのDeveloperサイト</a>に開発者として登録します。
<a href="http://instagram.com/developer/authentication/">Authentication</a>
のページを見ながら、Server-side (Explicit) Flow を参考にアクセストークンを取得します。</p>

<h2>Instagram APIを叩く</h2>

<p><code>https://api.instagram.com/v1/tags/$TAGNAME/media/recent?access_token=YOUR_ACCESS_TOKEN</code>を叩くと
TAGNAMEに関連する画像の情報がJSONで帰ってくるので、
Perlからこのエンドポイントを叩きます。
IRCとのやりとりには<a href="http://www.songmu.jp/riji/entry/2013-09-09-unazusan.html">UnazuSan</a>を使いました。</p>

<pre><code class="perl">!/usr/bin/env perl
use 5.014;
use warnings;
use strict;
use utf8;
use Encode qw/encode_utf8/;
use Furl;
use JSON;

use UnazuSan;

sub neko {
    state $data = undef;
    state $time = 0;
    if( !$data || time - $time &gt; 60 * 60) {
        $time = time;
        my $furl = Furl-&gt;new;
        my $res = $furl-&gt;get('https://api.instagram.com/v1/tags/%E7%8C%AB/media/recent?access_token=YOUR_ACCESS_TOKEN');
        my $hash = JSON::decode_json($res-&gt;content);
        $data = $hash-&gt;{data};
    }
    my $media = $data-&gt;[rand(scalar @$data)];
    return $media-&gt;{images}{standard_resolution}{url};
}

my $unazu_san;
my $NICKNAME = 'iyashi';
$unazu_san = UnazuSan-&gt;new(
    host       =&gt; '127.0.0.1',
    enable_ssl =&gt; 1,
    join_channels =&gt; ['#test'],
    respond_all   =&gt; 1,
    nickname      =&gt; $NICKNAME,
);

$unazu_san-&gt;on_message(
    qr/^\s+$NICKNAME:/ =&gt; sub {
        my $receive = shift;
        $receive-&gt;reply('うんうん');
    },
    qr/(.*)/ =&gt; sub {
        my ($receive, $match) = @_;
        say $match;
        say $receive-&gt;message;
    },
);

$unazu_san-&gt;on_command(
   ' 癒やし' =&gt; sub {
        my ($receive, @args) = @_;
        $receive-&gt;reply(neko());
    }
);

$unazu_san-&gt;run;
</code></pre>

<p>「癒して」と話しかけると猫画像を検索して返してくれます。</p>

<h2>引数をMeCabで解析する</h2>

<pre><code class="plain">acidlemon unazu_san: 癒やしをうさぎで頼む
acidlemon ネコやん! ('-'#)
</code></pre>

<p>みたいなことがあったので、「癒して」のあとも見ることにしました。
MeCabを使って名詞っぽいものを抽出して、タグ名に使います。</p>

<pre><code class="perl">state $mecab = Text::MeCab-&gt;new();

my $n = $mecab-&gt;parse(join ' ', @_);
my $keyword = undef;
while ($n) {
    my $f = decode_utf8 $n-&gt;feature;
    $keyword //= decode_utf8($n-&gt;surface) if ($f =~ /^名詞,/) &amp;&amp; ($f !~ /^名詞,代名詞,/);
    $n = $n-&gt;next;
}
$keyword //= '猫';
my $word = uri_escape_utf8($keyword);
my $res = $furl-&gt;get("https://api.instagram.com/v1/tags/$word/media/recent?access_token=ACCESS_TOKEN");
</code></pre>

<p>これで癒やしをうさぎで頼まれてもウサギ画像を返せるようになりました。</p>
]]></content>
  </entry>
  
</feed>
