<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: travis | Shogo's Blog]]></title>
  <link href="https://shogo82148.github.io/blog/categories/travis/atom.xml" rel="self"/>
  <link href="https://shogo82148.github.io/"/>
  <updated>2017-12-06T05:56:29+09:00</updated>
  <id>https://shogo82148.github.io/</id>
  <author>
    <name><![CDATA[Shogo Ichinose]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[travisがいつのまにやらcsharpをサポートしていた件]]></title>
    <link href="https://shogo82148.github.io/blog/2015/03/29/travis-supports-csharp/"/>
    <updated>2015-03-29T11:54:00+09:00</updated>
    <id>https://shogo82148.github.io/blog/2015/03/29/travis-supports-csharp</id>
    <content type="html"><![CDATA[<p>いつもテスト実行でお世話になっているtravisさんが<a href="http://docs.travis-ci.com/user/languages/csharp/">C#をサポートしていました</a>。</p>

<!-- More -->


<p>以前から <a href="https://github.com/travis-ci/travis-ci/issues/649">C#をサポートして欲しいという要望</a>はあったのですが、
2014年12月あたりからついに使えるようになってたみたいです。</p>

<p>以前はC言語のフリをして、設定ファルで頑張ってmonoをインストールする必要があったのですが、</p>

<pre><code class="yaml .travis.yml">## Travis CI Integration

language: c
install:
  - sudo apt-get install mono-devel mono-gmcs
script:
  - xbuild hogehoge.sln
</code></pre>

<p>今はlanguageにcsharpを設定して、solutionを指定するだけです。</p>

<pre><code class="yaml .travis.yml">## Travis CI Integration

language: csharp
solution: hogehoge.sln
</code></pre>

<p><a href="https://github.com/shogo82148/MiniMessagePack">MiniMeggagePack</a> もこちらの設定を使うようにしてみました。</p>

<p>nunitを使ってテストする場合は結局<code>sudo apt-get install nunit-console</code>する必要があるみたいですが、
複数バージョンのmonoでテストできたりしていい感じです。
ただ、ドキュメントにはmono2.10.8もサポートしているとあるのにmonoのインストールが404で失敗したり、
他のバージョンでも時たまmonoのインストールにコケたり、
3.8.0でnunitのテストが上手く動かなかったり、不安定な感じがしてます。
徐々に改善していくといいなー。</p>

<h2>参考</h2>

<ul>
<li><a href="http://docs.travis-ci.com/user/languages/csharp/">Building a C#, F#, or Visual Basic Project</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[travis-ciでC++11のテストをする]]></title>
    <link href="https://shogo82148.github.io/blog/2014/05/22/use-cpp11-in-travis/"/>
    <updated>2014-05-22T23:34:00+09:00</updated>
    <id>https://shogo82148.github.io/blog/2014/05/22/use-cpp11-in-travis</id>
    <content type="html"><![CDATA[<p>今 C++ を書くなら C++11 だよね！と言うわけでC++11の新機能を使ってコードを書いたので、
<a href="https://travis-ci.org/">travis-cli</a>でテストしたらFAIL。</p>

<pre><code class="plain">$ g++ -std=gnu++0x hogehoge.cpp
sorry, unimplemented: non-static data member initializers
</code></pre>

<p>unimplemented・・・だと・・・。</p>

<p>頑張って動かしてみたのでメモ。</p>

<!-- More -->


<h2>autoconf の設定をする</h2>

<p>autotoolsを使っていたので、
C++11 に対応しているかのチェックを追加しておきます。</p>

<p><a href="https://www.gnu.org/software/autoconf-archive/ax_cxx_compile_stdcxx_11.html">ax_cxx_compile_stdcxx_11.m4</a>をダウンロードし、
configure.ac でm4ファイルをダウンロードするようにしておきます。</p>

<pre><code class="plain configure.ac">m4_include([m4/ax_cxx_compile_stdcxx_11.m4])
AX_CXX_COMPILE_STDCXX_11
AC_LANG([C++])
</code></pre>

<h2>travis.yaml を設定する</h2>

<p>ぐぐったら<a href="http://stackoverflow.com/questions/22111549/travis-ci-with-clang-3-4-and-c11">stackoverflowでやり方を見つけました</a>。
標準でテストに使われるコンパイラは古いようなので、新しいバージョンのものをインストールするように設定します。</p>

<pre><code class="plain">language: cpp

compiler:
  - clang
  - gcc

before_install:
  # g++4.8.1
  - if [ "$CXX" == "g++" ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi

  # clang 3.4
  - if [ "$CXX" == "clang++" ]; then sudo add-apt-repository -y ppa:h-rayflood/llvm; fi

  - sudo apt-get update -qq

install:
  # g++4.8.1
  - if [ "$CXX" = "g++" ]; then sudo apt-get install -qq g++-4.8; fi
  - if [ "$CXX" = "g++" ]; then export CXX="g++-4.8"; fi

  # clang 3.4
  - if [ "$CXX" == "clang++" ]; then sudo apt-get install --allow-unauthenticated -qq clang-3.4; fi
  - if [ "$CXX" == "clang++" ]; then export CXX="clang++-3.4"; fi
</code></pre>

<p>これで、clangとgccでテストが走るようになります。</p>
]]></content>
  </entry>
  
</feed>
