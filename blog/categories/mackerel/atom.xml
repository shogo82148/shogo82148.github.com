<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mackerel | Shogo's Blog]]></title>
  <link href="https://shogo82148.github.io/blog/categories/mackerel/atom.xml" rel="self"/>
  <link href="https://shogo82148.github.io/"/>
  <updated>2018-01-02T15:03:45+09:00</updated>
  <id>https://shogo82148.github.io/</id>
  <author>
    <name><![CDATA[Shogo Ichinose]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mackerel AWS Integration 用の CloudFormation テンプレートを書いた]]></title>
    <link href="https://shogo82148.github.io/blog/2018/01/02/cloudformation-template-for-mackerel-integration/"/>
    <updated>2018-01-02T12:36:51+09:00</updated>
    <id>https://shogo82148.github.io/blog/2018/01/02/cloudformation-template-for-mackerel-integration</id>
    <content type="html"><![CDATA[<p>昨年の年末から Mackerel の本格導入を始めました。
それに当たって <a href="https://mackerel.io/ja/docs/entry/integrations/aws">AWS Integration</a> 用の CloudFormation テンプレートを書いたので、
他のプロジェクトでも導入が簡単になるよう公開しました。</p>

<ul>
<li><a href="https://github.com/shogo82148/cf_mackerel">shogo82148/cf_mackerel</a></li>
</ul>


<!-- More -->


<h2>使い方</h2>

<p>GitHub Pages でテンプレートを公開しているので、
<code>template-body</code> にテンプレートのURLを指定して、
新しいスタックを作成するだけです。</p>

<pre><code>aws cloudformation create-stack --stack-name "MackerelIntegrationIamUser" \
    --template-body https://shogo82148.github.io/cf_mackerel/mackerel.yaml \
    --capabilities CAPABILITY_NAMED_IAM
</code></pre>

<p>新しい名前付きIAMロールを作成するので <code>CAPABILITY_NAMED_IAM</code> が必要です。</p>

<p>作成がうまくいくとOutputに以下のようなARNが出力されるので、
MackerelのAWS Integrationの設定画面へ入力しましょう。</p>

<pre><code>arn:aws:iam::xxxxxxxxxxxx:role/MackerelAWSIntegrationRole-ap-northeast-1
</code></pre>

<h2>ロール名について</h2>

<p>ロール名が意図せずに変わってしまって連携が切れてしまうのを防ぐため、
ロール名は決め打ちです。</p>

<blockquote><p>MackerelAWSIntegrationRole-ap-northeast-1</p></blockquote>

<p>ロール名にリージョン名(この場合は ap-northeast-1)が含まれていますが、
作成されたロールはグローバルなリソースなので、他のリージョンでも使用可能です。
わざわざリージョン名含めているのは CloudFormation の警告にしたがったためです。</p>

<blockquote><p>警告</p>

<p>IAM リソースに名前を付けると、複数のリージョンで同じテンプレートを再利用した場合に、回復不能なエラーが発生する場合があります。 これを防止するために、Fn::Join と AWS::Region を使用して、次の例のように地域固有の名前を作成することをお勧めします
<a href="https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-rolename">RoleName</a></p></blockquote>

<p><strong>回復不能なエラー！！</strong></p>

<p>コワイので実際に何が起こるかは試してませんが、警告には素直に従っておくことにします。</p>

<h2>参考</h2>

<ul>
<li><a href="https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html">AWS::IAM::Role - AWS CloudFormation -</a></li>
<li><a href="https://qiita.com/ara_ta3/items/db9ed78615b553af5f0b">mackerelのAWSインテグレーション用IAM Userをcloudformationで作る</a></li>
<li><a href="https://github.com/Tomohiro/tf_mackerel">Tomohiro/tf_mackerel</a> 同じことをするTerraformのモジュール</li>
</ul>

]]></content>
  </entry>
  
</feed>
